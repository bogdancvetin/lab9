1. Что такое примитивные типы данных? Перечислите их.
Примитивные типы данных — это базовые типы, предоставляемые языком программирования, которые не являются объектами. Они хранят значение непосредственно.

Примитивные типы в TypeScript:

number (числа: целые и с плавающей точкой)
string (строки)
boolean (логические значения true/false)
null (отсутствие значения)
undefined (переменная без значения)
bigint (большие целые числа)
symbol (уникальные идентификаторы)
2. Что такое ссылочные типы? Какие типы относятся к ним?
Ссылочные типы — это типы, которые хранят не сами значения, а ссылки на область памяти, где эти значения находятся.

К ссылочным типам относятся:

object (объекты)
array (массивы)
function (функции)
пользовательские классы и интерфейсы (class, interface)
3. Какие типы относятся к типам-значениям?
Типы-значения хранят сами данные, а не ссылки. К ним относятся примитивные типы:

number
string
boolean
null
undefined
bigint
symbol
4. В чем отличие между ссылочными и значимыми типами данных?
Значимые типы:

Хранят сами значения.
Копируются при присваивании.
Не разделяют память между переменными.
Ссылочные типы:

Хранят ссылку на объект в памяти.
При присваивании копируется ссылка (переменные ссылаются на один и тот же объект).
Изменение значения через одну переменную отразится в другой.
5. Для чего используется объединение типов (union)?
Объединение типов (union) позволяет переменной принимать значения нескольких типов. Используется для задания переменных, которые могут иметь разные типы.

Пример:

typescript
Копировать код
let value: number | string;
value = 42;        // Допустимо
value = "Hello";   // Допустимо
6. Что такое неявно типизированная переменная?
Неявно типизированная переменная — это переменная, чей тип выводится автоматически на основе присвоенного значения.

Пример:

typescript
Копировать код
let x = 42;  // Тип x автоматически определён как number
let y = "Hello";  // Тип y — string
7. Для чего используют null тип?
Тип null используется для явного указания, что значение переменной отсутствует. Он полезен для проверки на отсутствие данных.

Пример:

typescript
Копировать код
let value: string | null = null;
if (value === null) {
  console.log("Нет данных");
} else {
  console.log(value);
}
8. Приведите примеры определения и инициализации одномерных и двумерных массивов.
Одномерный массив:
typescript
Копировать код
const numbers: number[] = [1, 2, 3, 4, 5];
Двумерный массив:
typescript
Копировать код
const matrix: number[][] = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9]
];
9. Что такое ступенчатый массив? Как его задать?
Ступенчатый массив — это массив, у которого строки имеют разное количество элементов.

Пример:

typescript
Копировать код
const jaggedArray: number[][] = [
  [1, 2],
  [3, 4, 5],
  [6, 7, 8, 9]
];
10. Какие типы можно использовать в foreach? Приведите пример.
В forEach можно использовать любые массивы, содержащие элементы любого типа (примитивные и ссылочные).

Пример:

typescript
Копировать код
const numbers = [1, 2, 3, 4];
numbers.forEach((num) => console.log(num)); // Вывод: 1, 2, 3, 4
11. Что такое кортеж? Для чего и как он используется?
Кортеж — это структура фиксированного размера, которая может содержать элементы разных типов в определённой последовательности. Используется для работы с фиксированными наборами данных.

Пример:

typescript
Копировать код
const tuple: [number, string, boolean] = [42, "Hello", true];
console.log(tuple[0]); // 42
console.log(tuple[1]); // "Hello"